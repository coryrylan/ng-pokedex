{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let FormSearchComponent = /*#__PURE__*/(() => {\n  class FormSearchComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.formChange = new EventEmitter();\n      this.searchForm = this.formBuilder.group({\n        search: ['']\n      });\n      this.subscriptions = [this.searchForm.controls.search.valueChanges.subscribe(value => this.formChange.emit(value))];\n    }\n    ngOnDestroy() {\n      this.subscriptions.forEach(s => s.unsubscribe());\n    }\n  }\n  FormSearchComponent.ɵfac = function FormSearchComponent_Factory(t) {\n    return new (t || FormSearchComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  FormSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FormSearchComponent,\n    selectors: [[\"app-form-search\"]],\n    outputs: {\n      formChange: \"formChange\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"input\", 3, \"formGroup\"], [\"type\", \"text\", \"aria-label\", \"Search\", \"placeholder\", \"Search\", \"formControlName\", \"search\"]],\n    template: function FormSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.searchForm);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName],\n    styles: [\"\"]\n  });\n  return FormSearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}