{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { lockScroll, ariaHideBody, trapTabFocus, unlockScroll, ariaShowBody } from '@ngx-lite/util';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction NgxModalComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function NgxModalComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.closeOnClick();\n    });\n    i0.ɵɵelementStart(1, \"span\", 8);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NgxModalComponent_ng_content_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2, [\"*ngIf\", \"visible && !templateRef\"]);\n  }\n}\nfunction NgxModalComponent_7_ng_template_0_Template(rf, ctx) {}\nfunction NgxModalComponent_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, NgxModalComponent_7_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.templateRef);\n  }\n}\nconst _c0 = [[[\"\", \"ngx-modal-header\", \"\"]], [[\"\", \"ngx-modal-footer\", \"\"]], \"*\"];\nconst _c1 = function (a0) {\n  return {\n    \"hidden\": a0\n  };\n};\nconst _c2 = [\"[ngx-modal-header]\", \"[ngx-modal-footer]\", \"*\"];\nlet NgxModalComponent = /*#__PURE__*/(() => {\n  class NgxModalComponent {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.closable = true;\n      this.type = '';\n      this.large = false;\n      this.visible = false;\n      this.visibleChange = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n      const visible = changes.visible.currentValue;\n      if (visible) {\n        lockScroll();\n        ariaHideBody();\n        setTimeout(() => trapTabFocus(this.elementRef.nativeElement), 0); // todo: need to hook into the proper lifecycle\n      } else {\n        unlockScroll();\n        ariaShowBody();\n      }\n      this.visibleChange.emit(this.visible);\n    }\n    ngOnDestroy() {\n      this.cleanUpDOM();\n    }\n    rootClick(event) {\n      if (event && event.target) {\n        this.lastFocusedElement = event.target;\n      }\n    }\n    closeOnEscape(event) {\n      if (this.closable) {\n        this.close();\n      }\n    }\n    closeOnClick(event) {\n      const closable = this.closable && event && event.target.className.includes('ngx-modal-closable-target');\n      if (closable) {\n        this.close();\n      }\n    }\n    close() {\n      this.visible = false;\n      this.visibleChange.emit(this.visible);\n      this.cleanUpDOM();\n    }\n    cleanUpDOM() {\n      unlockScroll();\n      ariaShowBody();\n      this.focusLastFocusedElement();\n    }\n    focusLastFocusedElement() {\n      if (this.lastFocusedElement) {\n        this.lastFocusedElement.focus();\n      }\n    }\n  }\n  NgxModalComponent.ɵfac = function NgxModalComponent_Factory(t) {\n    return new (t || NgxModalComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  NgxModalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxModalComponent,\n    selectors: [[\"ngx-modal\"]],\n    hostBindings: function NgxModalComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function NgxModalComponent_click_HostBindingHandler($event) {\n          return ctx.rootClick($event);\n        }, false, i0.ɵɵresolveDocument)(\"keyup\", function NgxModalComponent_keyup_HostBindingHandler($event) {\n          return ctx.closeOnEscape($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      closable: \"closable\",\n      type: \"type\",\n      large: \"large\",\n      visible: \"visible\",\n      templateRef: \"templateRef\"\n    },\n    outputs: {\n      visibleChange: \"visibleChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 10,\n    vars: 8,\n    consts: [[\"role\", \"dialog\", 1, \"ngx-modal-overlay\", \"ngx-modal-closable-target\", 3, \"ngClass\", \"click\"], [\"role\", \"document\", 1, \"ngx-modal\"], [1, \"ngx-modal__header\"], [\"type\", \"button\", \"aria-label\", \"close modal\", \"title\", \"close modal\", \"class\", \"ngx-modal__close-btn ngx-modal-closable-target\", 3, \"click\", 4, \"ngIf\"], [1, \"ngx-modal__content\"], [4, \"ngIf\"], [1, \"ngx-modal__footer\"], [\"type\", \"button\", \"aria-label\", \"close modal\", \"title\", \"close modal\", 1, \"ngx-modal__close-btn\", \"ngx-modal-closable-target\", 3, \"click\"], [1, \"ngx-modal__icon-close\", \"ngx-modal-closable-target\"], [3, \"ngTemplateOutlet\"]],\n    template: function NgxModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelementStart(0, \"dialog\", 0);\n        i0.ɵɵlistener(\"click\", function NgxModalComponent_Template_dialog_click_0_listener($event) {\n          return ctx.closeOnClick($event);\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵtemplate(4, NgxModalComponent_button_4_Template, 3, 0, \"button\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, NgxModalComponent_ng_content_6_Template, 1, 0, \"ng-content\", 5);\n        i0.ɵɵtemplate(7, NgxModalComponent_7_Template, 1, 1, null, 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵprojection(9, 1);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c1, !ctx.visible));\n        i0.ɵɵattribute(\"open\", ctx.visible)(\"aria-hidden\", !ctx.visible);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.closable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.visible && !ctx.templateRef);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.visible && ctx.templateRef);\n      }\n    },\n    directives: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet],\n    styles: [\"*,:after,:before{box-sizing:border-box}dialog{height:100%;width:100%;border:0;display:block;padding:0;margin:0}.ngx-modal-overlay{display:block;z-index:9999;position:fixed;overflow-x:hidden;overflow-y:auto;right:0;left:0;top:0;bottom:0;background-color:#000000b3}.ngx-modal-overlay.hidden{display:none}.ngx-modal{z-index:2;position:relative;margin:0 auto;min-height:100%;width:100%;background-color:#fff;box-shadow:0 7px 8px -4px #0003,0 13px 19px 2px #00000024,0 5px 24px 4px #0000001f}@media (min-width:720px){.ngx-modal{margin:38px auto;min-height:200px;height:auto;width:90%;max-width:520px}}.ngx-modal__header{min-height:30px}.ngx-modal__content{padding:12px;overflow:hidden;width:100%}.ngx-modal__close-btn{text-decoration:none;display:block;padding:4px 14px;font-size:30px;border:0;cursor:pointer;position:absolute;top:0;right:0;background-color:initial;color:#2d2d2d}.ngx-modal__close-btn:hover{background-color:#f2f2f2}.ngx-modal__close-btn svg{width:20px}ngx-modal [ngx-modal-header]{padding:10px 12px;border-bottom:1px solid #ccc}ngx-modal [ngx-modal-footer]{padding:12px;border-top:1px solid #ccc}\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return NgxModalComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgxModalModule = /*#__PURE__*/(() => {\n  class NgxModalModule {}\n  NgxModalModule.ɵfac = function NgxModalModule_Factory(t) {\n    return new (t || NgxModalModule)();\n  };\n  NgxModalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxModalModule\n  });\n  NgxModalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return NgxModalModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of ngx-modal\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxModalComponent, NgxModalModule };\n//# sourceMappingURL=ngx-lite-modal.js.map","map":null,"metadata":{},"sourceType":"module"}