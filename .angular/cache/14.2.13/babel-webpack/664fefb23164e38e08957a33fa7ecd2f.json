{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n  return function bufferCountOperatorFunction(source) {\n    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n  };\n}\nclass BufferCountOperator {\n  constructor(bufferSize, startBufferEvery) {\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n  call(subscriber, source) {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\nclass BufferCountSubscriber extends Subscriber {\n  constructor(destination, bufferSize) {\n    super(destination);\n    this.bufferSize = bufferSize;\n    this.buffer = [];\n  }\n  _next(value) {\n    const buffer = this.buffer;\n    buffer.push(value);\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n  _complete() {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\nclass BufferSkipCountSubscriber extends Subscriber {\n  constructor(destination, bufferSize, startBufferEvery) {\n    super(destination);\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n    this.buffers = [];\n    this.count = 0;\n  }\n  _next(value) {\n    const {\n      bufferSize,\n      startBufferEvery,\n      buffers,\n      count\n    } = this;\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n    for (let i = buffers.length; i--;) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n  _complete() {\n    const {\n      buffers,\n      destination\n    } = this;\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n}","map":{"version":3,"names":["Subscriber","bufferCount","bufferSize","startBufferEvery","bufferCountOperatorFunction","source","lift","BufferCountOperator","constructor","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","call","subscriber","subscribe","destination","buffer","_next","value","push","length","next","_complete","buffers","count","i","splice","shift"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/operators/bufferCount.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nclass BufferCountOperator {\n    constructor(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    }\n}\nclass BufferCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    _next(value) {\n        const buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n}\nclass BufferSkipCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize, startBufferEvery) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    _next(value) {\n        const { bufferSize, startBufferEvery, buffers, count } = this;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (let i = buffers.length; i--;) {\n            const buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    }\n    _complete() {\n        const { buffers, destination } = this;\n        while (buffers.length > 0) {\n            let buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        super._complete();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}