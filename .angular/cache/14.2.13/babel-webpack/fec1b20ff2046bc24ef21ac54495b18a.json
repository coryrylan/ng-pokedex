{"ast":null,"code":"import { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nconst NONE = {};\nexport function combineLatest(...observables) {\n  let resultSelector = undefined;\n  let scheduler = undefined;\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop();\n  }\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop();\n  }\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0];\n  }\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexport class CombineLatestOperator {\n  constructor(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n  call(subscriber, source) {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\nexport class CombineLatestSubscriber extends OuterSubscriber {\n  constructor(destination, resultSelector) {\n    super(destination);\n    this.resultSelector = resultSelector;\n    this.active = 0;\n    this.values = [];\n    this.observables = [];\n  }\n  _next(observable) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n  _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, undefined, i));\n      }\n    }\n  }\n  notifyComplete(unused) {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n  notifyNext(_outerValue, innerValue, outerIndex) {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n  _tryResultSelector(values) {\n    let result;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}","map":{"version":3,"names":["isScheduler","isArray","OuterSubscriber","subscribeToResult","fromArray","NONE","combineLatest","observables","resultSelector","undefined","scheduler","length","pop","lift","CombineLatestOperator","constructor","call","subscriber","source","subscribe","CombineLatestSubscriber","destination","active","values","_next","observable","push","_complete","len","complete","toRespond","i","add","notifyComplete","unused","notifyNext","_outerValue","innerValue","outerIndex","oldVal","_tryResultSelector","next","slice","result","apply","err","error"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/observable/combineLatest.js"],"sourcesContent":["import { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nconst NONE = {};\nexport function combineLatest(...observables) {\n    let resultSelector = undefined;\n    let scheduler = undefined;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexport class CombineLatestOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class CombineLatestSubscriber extends OuterSubscriber {\n    constructor(destination, resultSelector) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    _next(observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (let i = 0; i < len; i++) {\n                const observable = observables[i];\n                this.add(subscribeToResult(this, observable, undefined, i));\n            }\n        }\n    }\n    notifyComplete(unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(_outerValue, innerValue, outerIndex) {\n        const values = this.values;\n        const oldVal = values[outerIndex];\n        const toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    }\n    _tryResultSelector(values) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}