{"ast":null,"code":"import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n  return source => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n  constructor(keySelector, flushes) {\n    this.keySelector = keySelector;\n    this.flushes = flushes;\n  }\n  call(subscriber, source) {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n  constructor(destination, keySelector, flushes) {\n    super(destination);\n    this.keySelector = keySelector;\n    this.values = new Set();\n    if (flushes) {\n      this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n    }\n  }\n  notifyNext() {\n    this.values.clear();\n  }\n  notifyError(error) {\n    this._error(error);\n  }\n  _next(value) {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n  _useKeySelector(value) {\n    let key;\n    const {\n      destination\n    } = this;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n  _finalizeNext(key, value) {\n    const {\n      values\n    } = this;\n    if (!values.has(key)) {\n      values.add(key);\n      this.destination.next(value);\n    }\n  }\n}","map":{"version":3,"names":["SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","distinct","keySelector","flushes","source","lift","DistinctOperator","constructor","call","subscriber","subscribe","DistinctSubscriber","destination","values","Set","add","notifyNext","clear","notifyError","error","_error","_next","value","_useKeySelector","_finalizeNext","key","err","has","next"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/operators/distinct.js"],"sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function distinct(keySelector, flushes) {\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n    constructor(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n}\nexport class DistinctSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, keySelector, flushes) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n        }\n    }\n    notifyNext() {\n        this.values.clear();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    _next(value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    }\n    _useKeySelector(value) {\n        let key;\n        const { destination } = this;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    }\n    _finalizeNext(key, value) {\n        const { values } = this;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,cAAc,EAAEC,qBAAqB,QAAQ,mBAAmB;AAChG,OAAO,SAASC,QAAQA,CAACC,WAAW,EAAEC,OAAO,EAAE;EAC3C,OAAQC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,gBAAgB,CAACJ,WAAW,EAAEC,OAAO,CAAC,CAAC;AAC9E;AACA,MAAMG,gBAAgB,CAAC;EACnBC,WAAWA,CAACL,WAAW,EAAEC,OAAO,EAAE;IAC9B,IAAI,CAACD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EACAK,IAAIA,CAACC,UAAU,EAAEL,MAAM,EAAE;IACrB,OAAOA,MAAM,CAACM,SAAS,CAAC,IAAIC,kBAAkB,CAACF,UAAU,EAAE,IAAI,CAACP,WAAW,EAAE,IAAI,CAACC,OAAO,CAAC,CAAC;EAC/F;AACJ;AACA,OAAO,MAAMQ,kBAAkB,SAASb,qBAAqB,CAAC;EAC1DS,WAAWA,CAACK,WAAW,EAAEV,WAAW,EAAEC,OAAO,EAAE;IAC3C,KAAK,CAACS,WAAW,CAAC;IAClB,IAAI,CAACV,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACW,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;IACvB,IAAIX,OAAO,EAAE;MACT,IAAI,CAACY,GAAG,CAAChB,cAAc,CAACI,OAAO,EAAE,IAAIH,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;IACtE;EACJ;EACAgB,UAAUA,CAAA,EAAG;IACT,IAAI,CAACH,MAAM,CAACI,KAAK,CAAC,CAAC;EACvB;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAACC,MAAM,CAACD,KAAK,CAAC;EACtB;EACAE,KAAKA,CAACC,KAAK,EAAE;IACT,IAAI,IAAI,CAACpB,WAAW,EAAE;MAClB,IAAI,CAACqB,eAAe,CAACD,KAAK,CAAC;IAC/B,CAAC,MACI;MACD,IAAI,CAACE,aAAa,CAACF,KAAK,EAAEA,KAAK,CAAC;IACpC;EACJ;EACAC,eAAeA,CAACD,KAAK,EAAE;IACnB,IAAIG,GAAG;IACP,MAAM;MAAEb;IAAY,CAAC,GAAG,IAAI;IAC5B,IAAI;MACAa,GAAG,GAAG,IAAI,CAACvB,WAAW,CAACoB,KAAK,CAAC;IACjC,CAAC,CACD,OAAOI,GAAG,EAAE;MACRd,WAAW,CAACO,KAAK,CAACO,GAAG,CAAC;MACtB;IACJ;IACA,IAAI,CAACF,aAAa,CAACC,GAAG,EAAEH,KAAK,CAAC;EAClC;EACAE,aAAaA,CAACC,GAAG,EAAEH,KAAK,EAAE;IACtB,MAAM;MAAET;IAAO,CAAC,GAAG,IAAI;IACvB,IAAI,CAACA,MAAM,CAACc,GAAG,CAACF,GAAG,CAAC,EAAE;MAClBZ,MAAM,CAACE,GAAG,CAACU,GAAG,CAAC;MACf,IAAI,CAACb,WAAW,CAACgB,IAAI,CAACN,KAAK,CAAC;IAChC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}