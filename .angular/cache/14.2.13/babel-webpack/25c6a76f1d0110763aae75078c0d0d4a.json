{"ast":null,"code":"import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n  constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n    super();\n    this.scheduler = scheduler;\n    this._events = [];\n    this._infiniteTimeWindow = false;\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n  nextInfiniteTimeWindow(value) {\n    if (!this.isStopped) {\n      const _events = this._events;\n      _events.push(value);\n      if (_events.length > this._bufferSize) {\n        _events.shift();\n      }\n    }\n    super.next(value);\n  }\n  nextTimeWindow(value) {\n    if (!this.isStopped) {\n      this._events.push(new ReplayEvent(this._getNow(), value));\n      this._trimBufferThenGetEvents();\n    }\n    super.next(value);\n  }\n  _subscribe(subscriber) {\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription;\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n    }\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(_events[i].value);\n      }\n    }\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n    return subscription;\n  }\n  _getNow() {\n    return (this.scheduler || queue).now();\n  }\n  _trimBufferThenGetEvents() {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = this._events;\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n    while (spliceCount < eventsCount) {\n      if (now - _events[spliceCount].time < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n    return _events;\n  }\n}\nclass ReplayEvent {\n  constructor(time, value) {\n    this.time = time;\n    this.value = value;\n  }\n}","map":{"version":3,"names":["Subject","queue","Subscription","ObserveOnSubscriber","ObjectUnsubscribedError","SubjectSubscription","ReplaySubject","constructor","bufferSize","Number","POSITIVE_INFINITY","windowTime","scheduler","_events","_infiniteTimeWindow","_bufferSize","_windowTime","next","nextInfiniteTimeWindow","nextTimeWindow","value","isStopped","push","length","shift","ReplayEvent","_getNow","_trimBufferThenGetEvents","_subscribe","subscriber","len","subscription","closed","hasError","EMPTY","observers","add","i","error","thrownError","complete","now","eventsCount","spliceCount","time","Math","max","splice"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/ReplaySubject.js"],"sourcesContent":["import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        if (!this.isStopped) {\n            const _events = this._events;\n            _events.push(value);\n            if (_events.length > this._bufferSize) {\n                _events.shift();\n            }\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        if (!this.isStopped) {\n            this._events.push(new ReplayEvent(this._getNow(), value));\n            this._trimBufferThenGetEvents();\n        }\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}