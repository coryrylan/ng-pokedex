{"ast":null,"code":"import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0];\n    } else {\n      return observables[0];\n    }\n  }\n  return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n  call(subscriber, source) {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\nexport class RaceSubscriber extends OuterSubscriber {\n  constructor(destination) {\n    super(destination);\n    this.hasFirst = false;\n    this.observables = [];\n    this.subscriptions = [];\n  }\n  _next(observable) {\n    this.observables.push(observable);\n  }\n  _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable, i);\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n      this.subscriptions = null;\n    }\n    this.destination.next(innerValue);\n  }\n}","map":{"version":3,"names":["isArray","fromArray","OuterSubscriber","subscribeToResult","race","observables","length","undefined","lift","RaceOperator","call","subscriber","source","subscribe","RaceSubscriber","constructor","destination","hasFirst","subscriptions","_next","observable","push","_complete","len","complete","i","subscription","add","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","unsubscribe","remove","next"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/observable/race.js"],"sourcesContent":["import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    }\n}\nexport class RaceSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                let observable = observables[i];\n                let subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,OAAO,SAASC,IAAIA,CAAC,GAAGC,WAAW,EAAE;EACjC,IAAIA,WAAW,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAIN,OAAO,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MACzBA,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC;IAChC,CAAC,MACI;MACD,OAAOA,WAAW,CAAC,CAAC,CAAC;IACzB;EACJ;EACA,OAAOJ,SAAS,CAACI,WAAW,EAAEE,SAAS,CAAC,CAACC,IAAI,CAAC,IAAIC,YAAY,CAAC,CAAC,CAAC;AACrE;AACA,OAAO,MAAMA,YAAY,CAAC;EACtBC,IAAIA,CAACC,UAAU,EAAEC,MAAM,EAAE;IACrB,OAAOA,MAAM,CAACC,SAAS,CAAC,IAAIC,cAAc,CAACH,UAAU,CAAC,CAAC;EAC3D;AACJ;AACA,OAAO,MAAMG,cAAc,SAASZ,eAAe,CAAC;EAChDa,WAAWA,CAACC,WAAW,EAAE;IACrB,KAAK,CAACA,WAAW,CAAC;IAClB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACZ,WAAW,GAAG,EAAE;IACrB,IAAI,CAACa,aAAa,GAAG,EAAE;EAC3B;EACAC,KAAKA,CAACC,UAAU,EAAE;IACd,IAAI,CAACf,WAAW,CAACgB,IAAI,CAACD,UAAU,CAAC;EACrC;EACAE,SAASA,CAAA,EAAG;IACR,MAAMjB,WAAW,GAAG,IAAI,CAACA,WAAW;IACpC,MAAMkB,GAAG,GAAGlB,WAAW,CAACC,MAAM;IAC9B,IAAIiB,GAAG,KAAK,CAAC,EAAE;MACX,IAAI,CAACP,WAAW,CAACQ,QAAQ,CAAC,CAAC;IAC/B,CAAC,MACI;MACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,IAAI,CAAC,IAAI,CAACN,QAAQ,EAAEQ,CAAC,EAAE,EAAE;QAC5C,IAAIL,UAAU,GAAGf,WAAW,CAACoB,CAAC,CAAC;QAC/B,IAAIC,YAAY,GAAGvB,iBAAiB,CAAC,IAAI,EAAEiB,UAAU,EAAEA,UAAU,EAAEK,CAAC,CAAC;QACrE,IAAI,IAAI,CAACP,aAAa,EAAE;UACpB,IAAI,CAACA,aAAa,CAACG,IAAI,CAACK,YAAY,CAAC;QACzC;QACA,IAAI,CAACC,GAAG,CAACD,YAAY,CAAC;MAC1B;MACA,IAAI,CAACrB,WAAW,GAAG,IAAI;IAC3B;EACJ;EACAuB,UAAUA,CAACC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAE;IACjE,IAAI,CAAC,IAAI,CAAChB,QAAQ,EAAE;MAChB,IAAI,CAACA,QAAQ,GAAG,IAAI;MACpB,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACP,aAAa,CAACZ,MAAM,EAAEmB,CAAC,EAAE,EAAE;QAChD,IAAIA,CAAC,KAAKM,UAAU,EAAE;UAClB,IAAIL,YAAY,GAAG,IAAI,CAACR,aAAa,CAACO,CAAC,CAAC;UACxCC,YAAY,CAACQ,WAAW,CAAC,CAAC;UAC1B,IAAI,CAACC,MAAM,CAACT,YAAY,CAAC;QAC7B;MACJ;MACA,IAAI,CAACR,aAAa,GAAG,IAAI;IAC7B;IACA,IAAI,CAACF,WAAW,CAACoB,IAAI,CAACN,UAAU,CAAC;EACrC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}