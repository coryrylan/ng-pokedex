{"ast":null,"code":"import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function window(windowBoundaries) {\n  return function windowOperatorFunction(source) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\nclass WindowOperator {\n  constructor(windowBoundaries) {\n    this.windowBoundaries = windowBoundaries;\n  }\n  call(subscriber, source) {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n    }\n    return sourceSubscription;\n  }\n}\nclass WindowSubscriber extends SimpleOuterSubscriber {\n  constructor(destination) {\n    super(destination);\n    this.window = new Subject();\n    destination.next(this.window);\n  }\n  notifyNext() {\n    this.openWindow();\n  }\n  notifyError(error) {\n    this._error(error);\n  }\n  notifyComplete() {\n    this._complete();\n  }\n  _next(value) {\n    this.window.next(value);\n  }\n  _error(err) {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n  _complete() {\n    this.window.complete();\n    this.destination.complete();\n  }\n  _unsubscribe() {\n    this.window = null;\n  }\n  openWindow() {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject();\n    destination.next(newWindow);\n  }\n}","map":{"version":3,"names":["Subject","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","window","windowBoundaries","windowOperatorFunction","source","lift","WindowOperator","constructor","call","subscriber","windowSubscriber","WindowSubscriber","sourceSubscription","subscribe","closed","add","destination","next","notifyNext","openWindow","notifyError","error","_error","notifyComplete","_complete","_next","value","err","complete","_unsubscribe","prevWindow","newWindow"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/operators/window.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nclass WindowOperator {\n    constructor(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    call(subscriber, source) {\n        const windowSubscriber = new WindowSubscriber(subscriber);\n        const sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n        }\n        return sourceSubscription;\n    }\n}\nclass WindowSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    notifyNext() {\n        this.openWindow();\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete() {\n        this._complete();\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.window = null;\n    }\n    openWindow() {\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const destination = this.destination;\n        const newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,qBAAqB,EAAEC,cAAc,EAAEC,qBAAqB,QAAQ,mBAAmB;AAChG,OAAO,SAASC,MAAMA,CAACC,gBAAgB,EAAE;EACrC,OAAO,SAASC,sBAAsBA,CAACC,MAAM,EAAE;IAC3C,OAAOA,MAAM,CAACC,IAAI,CAAC,IAAIC,cAAc,CAACJ,gBAAgB,CAAC,CAAC;EAC5D,CAAC;AACL;AACA,MAAMI,cAAc,CAAC;EACjBC,WAAWA,CAACL,gBAAgB,EAAE;IAC1B,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;EAC5C;EACAM,IAAIA,CAACC,UAAU,EAAEL,MAAM,EAAE;IACrB,MAAMM,gBAAgB,GAAG,IAAIC,gBAAgB,CAACF,UAAU,CAAC;IACzD,MAAMG,kBAAkB,GAAGR,MAAM,CAACS,SAAS,CAACH,gBAAgB,CAAC;IAC7D,IAAI,CAACE,kBAAkB,CAACE,MAAM,EAAE;MAC5BJ,gBAAgB,CAACK,GAAG,CAAChB,cAAc,CAAC,IAAI,CAACG,gBAAgB,EAAE,IAAIF,qBAAqB,CAACU,gBAAgB,CAAC,CAAC,CAAC;IAC5G;IACA,OAAOE,kBAAkB;EAC7B;AACJ;AACA,MAAMD,gBAAgB,SAASb,qBAAqB,CAAC;EACjDS,WAAWA,CAACS,WAAW,EAAE;IACrB,KAAK,CAACA,WAAW,CAAC;IAClB,IAAI,CAACf,MAAM,GAAG,IAAIJ,OAAO,CAAC,CAAC;IAC3BmB,WAAW,CAACC,IAAI,CAAC,IAAI,CAAChB,MAAM,CAAC;EACjC;EACAiB,UAAUA,CAAA,EAAG;IACT,IAAI,CAACC,UAAU,CAAC,CAAC;EACrB;EACAC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAACC,MAAM,CAACD,KAAK,CAAC;EACtB;EACAE,cAAcA,CAAA,EAAG;IACb,IAAI,CAACC,SAAS,CAAC,CAAC;EACpB;EACAC,KAAKA,CAACC,KAAK,EAAE;IACT,IAAI,CAACzB,MAAM,CAACgB,IAAI,CAACS,KAAK,CAAC;EAC3B;EACAJ,MAAMA,CAACK,GAAG,EAAE;IACR,IAAI,CAAC1B,MAAM,CAACoB,KAAK,CAACM,GAAG,CAAC;IACtB,IAAI,CAACX,WAAW,CAACK,KAAK,CAACM,GAAG,CAAC;EAC/B;EACAH,SAASA,CAAA,EAAG;IACR,IAAI,CAACvB,MAAM,CAAC2B,QAAQ,CAAC,CAAC;IACtB,IAAI,CAACZ,WAAW,CAACY,QAAQ,CAAC,CAAC;EAC/B;EACAC,YAAYA,CAAA,EAAG;IACX,IAAI,CAAC5B,MAAM,GAAG,IAAI;EACtB;EACAkB,UAAUA,CAAA,EAAG;IACT,MAAMW,UAAU,GAAG,IAAI,CAAC7B,MAAM;IAC9B,IAAI6B,UAAU,EAAE;MACZA,UAAU,CAACF,QAAQ,CAAC,CAAC;IACzB;IACA,MAAMZ,WAAW,GAAG,IAAI,CAACA,WAAW;IACpC,MAAMe,SAAS,GAAG,IAAI,CAAC9B,MAAM,GAAG,IAAIJ,OAAO,CAAC,CAAC;IAC7CmB,WAAW,CAACC,IAAI,CAACc,SAAS,CAAC;EAC/B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}