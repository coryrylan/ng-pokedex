{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n  return source => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n  constructor(count, source) {\n    this.count = count;\n    this.source = source;\n  }\n  call(subscriber, source) {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\nclass RetrySubscriber extends Subscriber {\n  constructor(destination, count, source) {\n    super(destination);\n    this.count = count;\n    this.source = source;\n  }\n  error(err) {\n    if (!this.isStopped) {\n      const {\n        source,\n        count\n      } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}","map":{"version":3,"names":["Subscriber","retry","count","source","lift","RetryOperator","constructor","call","subscriber","subscribe","RetrySubscriber","destination","error","err","isStopped","_unsubscribeAndRecycle"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/operators/retry.js"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAO,SAASC,KAAKA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAE;EAC9B,OAAQC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,aAAa,CAACH,KAAK,EAAEC,MAAM,CAAC,CAAC;AACpE;AACA,MAAME,aAAa,CAAC;EAChBC,WAAWA,CAACJ,KAAK,EAAEC,MAAM,EAAE;IACvB,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACAI,IAAIA,CAACC,UAAU,EAAEL,MAAM,EAAE;IACrB,OAAOA,MAAM,CAACM,SAAS,CAAC,IAAIC,eAAe,CAACF,UAAU,EAAE,IAAI,CAACN,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC,CAAC;EACrF;AACJ;AACA,MAAMO,eAAe,SAASV,UAAU,CAAC;EACrCM,WAAWA,CAACK,WAAW,EAAET,KAAK,EAAEC,MAAM,EAAE;IACpC,KAAK,CAACQ,WAAW,CAAC;IAClB,IAAI,CAACT,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACAS,KAAKA,CAACC,GAAG,EAAE;IACP,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE;MACjB,MAAM;QAAEX,MAAM;QAAED;MAAM,CAAC,GAAG,IAAI;MAC9B,IAAIA,KAAK,KAAK,CAAC,EAAE;QACb,OAAO,KAAK,CAACU,KAAK,CAACC,GAAG,CAAC;MAC3B,CAAC,MACI,IAAIX,KAAK,GAAG,CAAC,CAAC,EAAE;QACjB,IAAI,CAACA,KAAK,GAAGA,KAAK,GAAG,CAAC;MAC1B;MACAC,MAAM,CAACM,SAAS,CAAC,IAAI,CAACM,sBAAsB,CAAC,CAAC,CAAC;IACnD;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}