{"ast":null,"code":"import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function skipUntil(notifier) {\n  return source => source.lift(new SkipUntilOperator(notifier));\n}\nclass SkipUntilOperator {\n  constructor(notifier) {\n    this.notifier = notifier;\n  }\n  call(destination, source) {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\nclass SkipUntilSubscriber extends SimpleOuterSubscriber {\n  constructor(destination, notifier) {\n    super(destination);\n    this.hasValue = false;\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    const innerSubscription = innerSubscribe(notifier, innerSubscriber);\n    if (innerSubscription !== innerSubscriber) {\n      this.add(innerSubscription);\n      this.innerSubscription = innerSubscription;\n    }\n  }\n  _next(value) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n  notifyNext() {\n    this.hasValue = true;\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n  notifyComplete() {}\n}","map":{"version":3,"names":["SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","skipUntil","notifier","source","lift","SkipUntilOperator","constructor","call","destination","subscribe","SkipUntilSubscriber","hasValue","innerSubscriber","add","innerSubscription","_next","value","notifyNext","unsubscribe","notifyComplete"],"sources":["C:/Users/keshr/Documents/Dev/Web Dev/Angular/Angular Migration/ng-pokedex/node_modules/rxjs/_esm2015/internal/operators/skipUntil.js"],"sourcesContent":["import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function skipUntil(notifier) {\n    return (source) => source.lift(new SkipUntilOperator(notifier));\n}\nclass SkipUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    }\n}\nclass SkipUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier) {\n        super(destination);\n        this.hasValue = false;\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        this.add(innerSubscriber);\n        this.innerSubscription = innerSubscriber;\n        const innerSubscription = innerSubscribe(notifier, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            this.add(innerSubscription);\n            this.innerSubscription = innerSubscription;\n        }\n    }\n    _next(value) {\n        if (this.hasValue) {\n            super._next(value);\n        }\n    }\n    notifyNext() {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    }\n    notifyComplete() {\n    }\n}\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,qBAAqB,EAAEC,cAAc,QAAQ,mBAAmB;AAChG,OAAO,SAASC,SAASA,CAACC,QAAQ,EAAE;EAChC,OAAQC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,iBAAiB,CAACH,QAAQ,CAAC,CAAC;AACnE;AACA,MAAMG,iBAAiB,CAAC;EACpBC,WAAWA,CAACJ,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EACAK,IAAIA,CAACC,WAAW,EAAEL,MAAM,EAAE;IACtB,OAAOA,MAAM,CAACM,SAAS,CAAC,IAAIC,mBAAmB,CAACF,WAAW,EAAE,IAAI,CAACN,QAAQ,CAAC,CAAC;EAChF;AACJ;AACA,MAAMQ,mBAAmB,SAASZ,qBAAqB,CAAC;EACpDQ,WAAWA,CAACE,WAAW,EAAEN,QAAQ,EAAE;IAC/B,KAAK,CAACM,WAAW,CAAC;IAClB,IAAI,CAACG,QAAQ,GAAG,KAAK;IACrB,MAAMC,eAAe,GAAG,IAAIb,qBAAqB,CAAC,IAAI,CAAC;IACvD,IAAI,CAACc,GAAG,CAACD,eAAe,CAAC;IACzB,IAAI,CAACE,iBAAiB,GAAGF,eAAe;IACxC,MAAME,iBAAiB,GAAGd,cAAc,CAACE,QAAQ,EAAEU,eAAe,CAAC;IACnE,IAAIE,iBAAiB,KAAKF,eAAe,EAAE;MACvC,IAAI,CAACC,GAAG,CAACC,iBAAiB,CAAC;MAC3B,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC9C;EACJ;EACAC,KAAKA,CAACC,KAAK,EAAE;IACT,IAAI,IAAI,CAACL,QAAQ,EAAE;MACf,KAAK,CAACI,KAAK,CAACC,KAAK,CAAC;IACtB;EACJ;EACAC,UAAUA,CAAA,EAAG;IACT,IAAI,CAACN,QAAQ,GAAG,IAAI;IACpB,IAAI,IAAI,CAACG,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,CAACI,WAAW,CAAC,CAAC;IACxC;EACJ;EACAC,cAAcA,CAAA,EAAG,CACjB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}